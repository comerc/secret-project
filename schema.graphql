# V1 (relationships)

type Board {
  id: ID!
  name: String!
  members: [Member!]!
  lists: [List!]!
  team: Team
  boardBackground: BoardBackground
  isArchived: Boolean!
  labels: [Label!]!
  activityLogs: [ActivityLog!]!
}

type Member {
  id: ID!
  username: String!
  role: Role!
  notifications: [Notification!]!
}

enum Role {
  ADMIN
  MEMBER
  OBSERVER
}

type List {
  id: ID!
  name: String!
  position: Int!
  cards: [Card!]!
  isArchived: Boolean!
  color: String
}

type Card {
  id: ID!
  title: String!
  description: String
  dueDate: String
  members: [Member!]!
  attachments: [Attachment!]!
  checklists: [Checklist!]!
  comments: [Comment!]!
  labels: [Label!]!
  position: Int!
  isArchived: Boolean!
  dependencies: [Card!]!
  aging: Aging!
  votingPower: Int
}

type Attachment {
  id: ID!
  type: AttachmentType!
  url: String!
}

enum AttachmentType {
  FILE
  LINK
}

type Checklist {
  id: ID!
  title: String!
  items: [ChecklistItem!]!
}

type ChecklistItem {
  id: ID!
  title: String!
  isComplete: Boolean!
}

type Comment {
  id: ID!
  content: String!
  author: Member!
  mentions: [Member!]!
  createdAt: String!
}

type Label {
  id: ID!
  name: String!
  color: String!
}

type Team {
  id: ID!
  name: String!
  members: [Member!]!
}

type Notification {
  id: ID!
  content: String!
  createdAt: String!
}

type BoardBackground {
  id: ID!
  image: String!
  color: String
}

type ActivityLog {
  id: ID!
  content: String!
  createdAt: String!
}

# Organization (open-api)

type Organization {
  id: ID!
  name: String!
  displayName: String!
  description: String
  url: String
  logoUrl: String
  website: String
  email: String
  premiumFeatures: [String]
  powerUps: [String]
  products: [String]
  memberships: [Membership]
  boards: [Board]
  members: [Member]
}

type Membership {
  id: ID!
  member: Member
  memberType: String
  memberStatus: String
  dateJoined: String
}

type Board {
  id: ID!
  name: String
  url: String
}

type Member {
  id: ID!
  username: String
  fullName: String
  avatarUrl: String
}

type Query {
  organization(id: ID!): Organization
}

schema {
  query: Query
}

# Member (open-api)

type Member {
  id: ID!
  username: String!
  fullName: String!
  avatarUrl: String
  avatarSource: String
  bio: String
  bioData: JSON
  confirmed: Boolean
  email: String
  gravatarHash: String
  idBoards: [ID]
  idBoardsPinned: [ID]
  idOrganizations: [ID]
  idEnterprisesAdmin: [ID]
  idPremOrgsAdmin: [ID]
  initials: String
  memberType: String
  oneTimeMessagesDismissed: [String]
  prefs: MemberPrefs
  premiumFeatures: [String]
  products: [String]
  status: String
  trophies: [Trophy]
  uploadedAvatarHash: String
  uploadedAvatarUrl: String
  url: String
  actions: [Action]
  boards: [Board]
  organizations: [Organization]
  customBoardBackgrounds: [CustomBoardBackground]
  customStickers: [CustomSticker]
  customEmoji: [CustomEmoji]
  savedSearches: [SavedSearch]
  boardStars: [BoardStar]
  notifications: [Notification]
  invites: [Invite]
  boardBackgrounds: [BoardBackground]
}

type MemberPrefs {
  sendSummaries: Boolean
  minutesBetweenSummaries: Int
  minutesBeforeDeadlineToNotify: Int
  colorBlind: Boolean
  locale: String
  showSidebar: Boolean
  showSidebarMembers: Boolean
  showSidebarBoardActions: Boolean
  showSidebarActivity: Boolean
  emailUnconfirmed: Boolean
  observerMessageSeen: Boolean
  observersSectionSeen: Boolean
  emailDigests: Boolean
  minutesBetweenDigests: Int
  minutesBeforeDeadlineToDigest: Int
  sendNoDueDate: Boolean
  displayAssigneeInBoard: Boolean
  displayCardAge: String
  displayListGuide: Boolean
  displayStickers: Boolean
  displayStickersOnCards: String
  displayCardNumbers: Boolean
  displayCardCoverImages: Boolean
  displayCardDescription: Boolean
  displayComments: String
  displayChecklistProgress: String
  enableCardAging: Boolean
  calendarFeedEnabled: Boolean
  background: String
  backgroundImage: String # i.e. fullSizeUrl
  backgroundImageScaled: [BackgroundImageScaled]
  backgroundTile: Boolean
  backgroundBrightness: String
  backgroundBottomColor: String
  backgroundTopColor: String
  canBePublic: Boolean
  canBeEnterprise: Boolean
  canBeOrg: Boolean
  canBePrivate: Boolean
  canInvite: Boolean
}

type BackgroundImageScaled {
  width: Int
  height: Int
  url: String
}

type Trophy {
  id: String
  name: String
  nameTranslations: TrophyNameTranslations
  desc: String
  descTranslations: TrophyDescTranslations
  limits: [Int]
  icon: String
  achieved: Boolean
}

type TrophyNameTranslations {
  en: String
  de: String
  es: String
  fr: String
  it: String
  ja: String
  nl: String
  pt: String
  pt_BR: String
  ru: String
  zh: String
  zh_TW: String
}

type TrophyDescTranslations {
  en: String
  de: String
  es: String
  fr: String
  it: String
  ja: String
  nl: String
  pt: String
  pt_BR: String
  ru: String
  zh: String
  zh_TW: String
}

type BoardBackground {
  id: ID!
  type: String # ?? color, image, gradient etc.
  brightness: Float
  tile: Boolean
  color: String
  image: BoardBackgroundImage
}

type BoardBackgroundImage {
  id: ID!
  scaled: [BoardBackgroundImageScaled]
  fullSizeUrl: String
}

type BoardBackgroundImageScaled {
  width: Int
  height: Int
  url: String
}

type CustomBoardBackground {
  id: ID!
  brightness: Float
  tile: Boolean
  color: String
  image: CustomBoardBackgroundImage
}

type CustomBoardBackgroundImage {
  id: ID!
  scaled: [CustomBoardBackgroundScaled]
  fullSizeUrl: String
}

type CustomBoardBackgroundScaled {
  width: Int
  height: Int
  url: String
}

type CustomSticker {
  id: ID!
  idSticker: String
  idAttachment: ID
  left: Int
  top: Int
  zIndex: Int
  rotate: Int
  opacity: Float
  url: String
}

type CustomEmoji {
  id: ID!
  name: String
  fullName: String
  unified: String
  native: String
}

type SavedSearch {
  id: ID!
  name: String
  pos: Float
  query: String
}

type BoardStar {
  id: ID!
  idBoard: ID
  pos: Float
}

type Notification {
  id: ID!
  unread: Boolean
  type: String
  date: String
  # data: NotificationData
}

# type NotificationData {
#   // Define the fields specific to the notification data
# }

type Invite {
  id: ID!
  idMember: ID
  idBoard: ID
  idOrganization: ID
  invitedBy: Member
  dateCreated: String
}

# Action type values:
# - addMemberToCard
# - copyCard
# - updateList
# - createList
# - addChecklistToCard
