{
  "info": {
    "_postman_id": "c42d642f-897f-4548-80b5-2c88ea720757",
    "name": "Trello REST API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Actions",
      "item": [
        {
          "name": "Get an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id",
              "query": [
                {
                  "key": "display",
                  "value": "{{display}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "entities",
                  "value": "{{entities}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of action [fields](/cloud/trello/guides/rest-api/object-definitions/#action-object)"
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "memberCreator",
                  "value": "{{memberCreator}}",
                  "disabled": true,
                  "description": "Whether to include the member object for the creator of the action"
                },
                {
                  "key": "memberCreator_fields",
                  "value": "{{memberCreator_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get an Action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id",
              "query": [
                {
                  "key": "text",
                  "value": "{{text}}",
                  "disabled": false,
                  "description": "The new text for the comment"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update a specific Action. Only comment actions can be updated. Used to edit the content of a comment.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a specific action. Only comment actions can be deleted.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a specific field on an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Action",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "An action field",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific property of an action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Board for an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/board",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Board for an Action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Card for an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/card",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of card fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the card for an action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the List for an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/list",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of list fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the List for an Action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Member of an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/member",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Gets the member of an action (not the creator)",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Member Creator of an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/memberCreator",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Member who created the Action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Organization of an Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/organization",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization fields"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Organization of an Action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Comment Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:id/text",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The new text for the comment"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the action to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Update a comment action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Action's Reactions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:idAction/reactions",
              "query": [
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)"
                },
                {
                  "key": "emoji",
                  "value": "{{emoji}}",
                  "disabled": true,
                  "description": "Whether to load the emoji as a nested resource."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "List reactions for an action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Reaction for Action",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:idAction/reactions",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Adds a new reaction to an action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get Action's Reaction",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:idAction/reactions/:id",
              "query": [
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to load the member as a nested resource. See [Members Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#members-nested-resource)"
                },
                {
                  "key": "emoji",
                  "value": "{{emoji}}",
                  "disabled": true,
                  "description": "Whether to load the emoji as a nested resource."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get information for a reaction",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Action's Reaction",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:idAction/reactions/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a reaction",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "List Action's summary of Reactions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}actions/:idAction/reactionsSummary",
              "query": [],
              "variable": [
                {
                  "key": "idAction",
                  "value": "{{idAction}}",
                  "description": "The ID of the action",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "List a summary of all reactions for an action",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Applications",
      "item": [
        {
          "name": "Get Application's compliance data",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}applications/:key/compliance",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Batch",
      "item": [
        {
          "name": "Batch Requests",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}batch",
              "query": [
                {
                  "key": "urls",
                  "value": "{{urls}}",
                  "disabled": false,
                  "description": "A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \"urls=/members/trello,/cards/[cardId]\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Make up to 10 GET requests in a single, batched API call.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Boards",
      "item": [
        {
          "name": "Get Memberships of a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/memberships",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of `admins`, `all`, `none`, `normal`"
                },
                {
                  "key": "activity",
                  "value": "{{activity}}",
                  "disabled": true,
                  "description": "Works for premium organizations only."
                },
                {
                  "key": "orgMemberType",
                  "value": "{{orgMemberType}}",
                  "disabled": true,
                  "description": "Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`."
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/)."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get information about the memberships users have to the board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id",
              "query": [
                {
                  "key": "actions",
                  "value": "{{actions}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about actions as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "boardStars",
                  "value": "{{boardStars}}",
                  "disabled": true,
                  "description": "Valid values are one of: `mine` or `none`."
                },
                {
                  "key": "cards",
                  "value": "{{cards}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about cards as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "card_pluginData",
                  "value": "{{card_pluginData}}",
                  "disabled": true,
                  "description": "Use with the `cards` param to include card pluginData with the response"
                },
                {
                  "key": "checklists",
                  "value": "{{checklists}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about checklists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "customFields",
                  "value": "{{customFields}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource)."
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url"
                },
                {
                  "key": "labels",
                  "value": "{{labels}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about labels as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "lists",
                  "value": "{{lists}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about lists as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "members",
                  "value": "{{members}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about members as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "memberships",
                  "value": "{{memberships}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about memberships as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "pluginData",
                  "value": "{{pluginData}}",
                  "disabled": true,
                  "description": "Determines whether the pluginData for this board should be returned. Valid values: true or false."
                },
                {
                  "key": "organization",
                  "value": "{{organization}}",
                  "disabled": true,
                  "description": "This is a nested resource. Read more about organizations as nested resources [here](/cloud/trello/guides/rest-api/nested-resources/)."
                },
                {
                  "key": "organization_pluginData",
                  "value": "{{organization_pluginData}}",
                  "disabled": true,
                  "description": "Use with the `organization` param to include organization pluginData with the response"
                },
                {
                  "key": "myPrefs",
                  "value": "{{myPrefs}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "tags",
                  "value": "{{tags}}",
                  "disabled": true,
                  "description": "Also known as collections, tags, refer to the collection(s) that a Board belongs to."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Request a single board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The new name for the board. 1 to 16384 characters long."
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "A new description for the board, 0 to 16384 characters long"
                },
                {
                  "key": "closed",
                  "value": "{{closed}}",
                  "disabled": true,
                  "description": "Whether the board is closed"
                },
                {
                  "key": "subscribed",
                  "value": "{{subscribed}}",
                  "disabled": true,
                  "description": "Whether the acting user is subscribed to the board"
                },
                {
                  "key": "idOrganization",
                  "value": "{{idOrganization}}",
                  "disabled": true,
                  "description": "The id of the Workspace the board should be moved to"
                },
                {
                  "key": "prefs/permissionLevel",
                  "value": "{{prefs/permissionLevel}}",
                  "disabled": true,
                  "description": "One of: org, private, public"
                },
                {
                  "key": "prefs/selfJoin",
                  "value": "{{prefs/selfJoin}}",
                  "disabled": true,
                  "description": "Whether Workspace members can join the board themselves"
                },
                {
                  "key": "prefs/cardCovers",
                  "value": "{{prefs/cardCovers}}",
                  "disabled": true,
                  "description": "Whether card covers should be displayed on this board"
                },
                {
                  "key": "prefs/hideVotes",
                  "value": "{{prefs/hideVotes}}",
                  "disabled": true,
                  "description": "Determines whether the Voting Power-Up should hide who voted on cards or not."
                },
                {
                  "key": "prefs/invitations",
                  "value": "{{prefs/invitations}}",
                  "disabled": true,
                  "description": "Who can invite people to this board. One of: admins, members"
                },
                {
                  "key": "prefs/voting",
                  "value": "{{prefs/voting}}",
                  "disabled": true,
                  "description": "Who can vote on this board. One of disabled, members, observers, org, public"
                },
                {
                  "key": "prefs/comments",
                  "value": "{{prefs/comments}}",
                  "disabled": true,
                  "description": "Who can comment on cards on this board. One of: disabled, members, observers, org, public"
                },
                {
                  "key": "prefs/background",
                  "value": "{{prefs/background}}",
                  "disabled": true,
                  "description": "The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey"
                },
                {
                  "key": "prefs/cardAging",
                  "value": "{{prefs/cardAging}}",
                  "disabled": true,
                  "description": "One of: pirate, regular"
                },
                {
                  "key": "prefs/calendarFeedEnabled",
                  "value": "{{prefs/calendarFeedEnabled}}",
                  "disabled": true,
                  "description": "Determines whether the calendar feed is enabled or not."
                },
                {
                  "key": "labelNames/green",
                  "value": "{{labelNames/green}}",
                  "disabled": true,
                  "description": "Name for the green label. 1 to 16384 characters long"
                },
                {
                  "key": "labelNames/yellow",
                  "value": "{{labelNames/yellow}}",
                  "disabled": true,
                  "description": "Name for the yellow label. 1 to 16384 characters long"
                },
                {
                  "key": "labelNames/orange",
                  "value": "{{labelNames/orange}}",
                  "disabled": true,
                  "description": "Name for the orange label. 1 to 16384 characters long"
                },
                {
                  "key": "labelNames/red",
                  "value": "{{labelNames/red}}",
                  "disabled": true,
                  "description": "Name for the red label. 1 to 16384 characters long"
                },
                {
                  "key": "labelNames/purple",
                  "value": "{{labelNames/purple}}",
                  "disabled": true,
                  "description": "Name for the purple label. 1 to 16384 characters long"
                },
                {
                  "key": "labelNames/blue",
                  "value": "{{labelNames/blue}}",
                  "disabled": true,
                  "description": "Name for the blue label. 1 to 16384 characters long"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update an existing board by id",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to delete",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a field on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board.",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "The field you'd like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idMemberCreator, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get a single, specific field on a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Actions of a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:boardId/actions",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "The fields to be returned for the Actions. [See Action fields here](/cloud/trello/guides/rest-api/object-definitions/#action-object)."
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "A comma-separated list of [action types](/cloud/trello/guides/rest-api/action-types/)."
                },
                {
                  "key": "format",
                  "value": "{{format}}",
                  "disabled": true,
                  "description": "The format of the returned Actions. Either list or count."
                },
                {
                  "key": "idModels",
                  "value": "{{idModels}}",
                  "disabled": true,
                  "description": "A comma-separated list of idModels. Only actions related to these models will be returned."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "The limit of the number of responses, between 0 and 1000."
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to return the member object for each action."
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) to return."
                },
                {
                  "key": "memberCreator",
                  "value": "{{memberCreator}}",
                  "disabled": true,
                  "description": "Whether to return the memberCreator object for each action."
                },
                {
                  "key": "memberCreator_fields",
                  "value": "{{memberCreator_fields}}",
                  "disabled": true,
                  "description": "The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) creator to return"
                },
                {
                  "key": "page",
                  "value": "{{page}}",
                  "disabled": true,
                  "description": "The page of results for actions."
                },
                {
                  "key": "reactions",
                  "value": "{{reactions}}",
                  "disabled": true,
                  "description": "Whether to show reactions on comments or not."
                },
                {
                  "key": "before",
                  "value": "{{before}}",
                  "disabled": true,
                  "description": "An Action ID"
                },
                {
                  "key": "since",
                  "value": "{{since}}",
                  "disabled": true,
                  "description": "An Action ID"
                }
              ],
              "variable": [
                {
                  "key": "boardId",
                  "value": "{{boardId}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Card on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/cards/:idCard",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "The fields to be returned for the Actions. [See Action fields here](/cloud/trello/guides/rest-api/object-definitions/#action-object)."
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "A comma-separated list of [action types](/cloud/trello/guides/rest-api/action-types/)."
                },
                {
                  "key": "format",
                  "value": "{{format}}",
                  "disabled": true,
                  "description": "The format of the returned Actions. Either list or count."
                },
                {
                  "key": "idModels",
                  "value": "{{idModels}}",
                  "disabled": true,
                  "description": "A comma-separated list of idModels. Only actions related to these models will be returned."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "The limit of the number of responses, between 0 and 1000."
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to return the member object for each action."
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) to return."
                },
                {
                  "key": "memberCreator",
                  "value": "{{memberCreator}}",
                  "disabled": true,
                  "description": "Whether to return the memberCreator object for each action."
                },
                {
                  "key": "memberCreator_fields",
                  "value": "{{memberCreator_fields}}",
                  "disabled": true,
                  "description": "The fields of the [member](/cloud/trello/guides/rest-api/object-definitions/#member-object) creator to return"
                },
                {
                  "key": "page",
                  "value": "{{page}}",
                  "disabled": true,
                  "description": "The page of results for actions."
                },
                {
                  "key": "reactions",
                  "value": "{{reactions}}",
                  "disabled": true,
                  "description": "Whether to show reactions on comments or not."
                },
                {
                  "key": "before",
                  "value": "{{before}}",
                  "disabled": true,
                  "description": "An Action ID"
                },
                {
                  "key": "since",
                  "value": "{{since}}",
                  "disabled": true,
                  "description": "An Action ID"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                },
                {
                  "key": "idCard",
                  "value": "{{idCard}}",
                  "description": "The id the card to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get a single Card on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get boardStars on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:boardId/boardStars",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "Valid values: mine, none"
                }
              ],
              "variable": [
                {
                  "key": "boardId",
                  "value": "{{boardId}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Checklists on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/checklists",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get all of the checklists on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Cards on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/cards",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get all of the open Cards on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get filtered Cards on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/cards/:filter",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Board",
                  "disabled": false
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "description": "Valid Values: all, closed, none, open, visible.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the Cards on a Board that match a given filter.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Custom Fields for Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/customFields",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Custom Field Definitions that exist on a board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Labels on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/labels",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "The fields to be returned for the Labels."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "The number of Labels to be returned."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Board.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get all of the Labels on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Label on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/labels",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "The name of the label to be created. 1 to 16384 characters long."
                },
                {
                  "key": "color",
                  "value": "{{color}}",
                  "disabled": false,
                  "description": "Sets the color of the new label. Valid values are a label color or `null`."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create a new Label on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Lists on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/lists",
              "query": [
                {
                  "key": "cards",
                  "value": "{{cards}}",
                  "disabled": true,
                  "description": "Filter to apply to Cards."
                },
                {
                  "key": "card_fields",
                  "value": "{{card_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/#card-object)"
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "Filter to apply to Lists"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Lists on a Board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a List on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/lists",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "The name of the list to be created. 1 to 16384 characters long."
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "Determines the position of the list. Valid values: `top`, `bottom`, or a positive number."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new List on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get filtered Lists on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/lists/:filter",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "description": "One of `all`, `closed`, `none`, `open`",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Members of a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/members",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get the Members for a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Invite Member to Board via email",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/members",
              "query": [
                {
                  "key": "email",
                  "value": "{{email}}",
                  "disabled": false,
                  "description": "The email address of a user to add as a member of the board."
                },
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": true,
                  "description": "Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Invite a Member to a Board via their email address.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Add a Member to a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/members/:idMember",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "One of: admin, normal, observer. Determines the type of member this user will be on the board."
                },
                {
                  "key": "allowBillableGuest",
                  "value": "{{allowBillableGuest}}",
                  "disabled": true,
                  "description": "Optional param that allows organization admins to add multi-board guests onto a board."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Add a member to the board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove Member from Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/members/:idMember",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Membership of Member on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/memberships/:idMembership",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "One of: admin, normal, observer. Determines the type of member that this membership will be to this board."
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                },
                {
                  "key": "idMembership",
                  "value": "{{idMembership}}",
                  "description": "The id of a membership that should be added to this board.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Update an existing board by id",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update emailPosition Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/emailPosition",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Valid values: bottom, top. Determines the position of the email address."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Update emailPosition Pref on a Board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update idEmailList Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/idEmailList",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The id of an email list."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Change the default list that email-to-board cards are created in.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update showListGuide Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/showListGuide",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether to show the list guide."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update showSidebar Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/showSidebar",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether to show the side bar."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update showSidebarActivity Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/showSidebarActivity",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether to show sidebar activity."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update showSidebarBoardActions Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/showSidebarBoardActions",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether to show the sidebar board actions."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update showSidebarMembers Pref on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/myPrefs/showSidebarMembers",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether to show members of the board in the sidebar."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "The new name for the board. 1 to 16384 characters long."
                },
                {
                  "key": "defaultLabels",
                  "value": "{{defaultLabels}}",
                  "disabled": true,
                  "description": "Determines whether to use the default set of labels."
                },
                {
                  "key": "defaultLists",
                  "value": "{{defaultLists}}",
                  "disabled": true,
                  "description": "Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided."
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "A new description for the board, 0 to 16384 characters long"
                },
                {
                  "key": "idOrganization",
                  "value": "{{idOrganization}}",
                  "disabled": true,
                  "description": "The id or name of the Workspace the board should belong to."
                },
                {
                  "key": "idBoardSource",
                  "value": "{{idBoardSource}}",
                  "disabled": true,
                  "description": "The id of a board to copy into the new board."
                },
                {
                  "key": "keepFromSource",
                  "value": "{{keepFromSource}}",
                  "disabled": true,
                  "description": "To keep cards from the original board pass in the value `cards`"
                },
                {
                  "key": "powerUps",
                  "value": "{{powerUps}}",
                  "disabled": true,
                  "description": "The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`."
                },
                {
                  "key": "prefs_permissionLevel",
                  "value": "{{prefs_permissionLevel}}",
                  "disabled": true,
                  "description": "The permissions level of the board. One of: `org`, `private`, `public`."
                },
                {
                  "key": "prefs_voting",
                  "value": "{{prefs_voting}}",
                  "disabled": true,
                  "description": "Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`."
                },
                {
                  "key": "prefs_comments",
                  "value": "{{prefs_comments}}",
                  "disabled": true,
                  "description": "Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`."
                },
                {
                  "key": "prefs_invitations",
                  "value": "{{prefs_invitations}}",
                  "disabled": true,
                  "description": "Determines what types of members can invite users to join. One of: `admins`, `members`."
                },
                {
                  "key": "prefs_selfJoin",
                  "value": "{{prefs_selfJoin}}",
                  "disabled": true,
                  "description": "Determines whether users can join the boards themselves or whether they have to be invited."
                },
                {
                  "key": "prefs_cardCovers",
                  "value": "{{prefs_cardCovers}}",
                  "disabled": true,
                  "description": "Determines whether card covers are enabled."
                },
                {
                  "key": "prefs_background",
                  "value": "{{prefs_background}}",
                  "disabled": true,
                  "description": "The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`."
                },
                {
                  "key": "prefs_cardAging",
                  "value": "{{prefs_cardAging}}",
                  "disabled": true,
                  "description": "Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Create a new board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a calendarKey for a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/calendarKey/generate",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create a new board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a emailKey for a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/emailKey/generate",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Tag for a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/idTags",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The id of a tag from the organization to which this board belongs."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Mark Board as viewed",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/markedAsViewed",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the board to update",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Enabled Power-Ups on Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/boardPlugins",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the enabled Power-Ups on a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Enable a Power-Up on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/boardPlugins",
              "query": [
                {
                  "key": "idPlugin",
                  "value": "{{idPlugin}}",
                  "disabled": true,
                  "description": "The ID of the Power-Up to enable"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Enable a Power-Up on a Board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Disable a Power-Up on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/boardPlugins/:idPlugin",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                },
                {
                  "key": "idPlugin",
                  "value": "{{idPlugin}}",
                  "description": "The ID of the Power-Up to disable",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Disable a Power-Up on a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Power-Ups on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}boards/:id/plugins",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of: `enabled` or `available`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the board",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the Power-Ups on a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cards",
      "item": [
        {
          "name": "Create a new Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The name for the card"
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "The description for the card"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "The position of the new card. `top`, `bottom`, or a positive float"
                },
                {
                  "key": "due",
                  "value": "{{due}}",
                  "disabled": true,
                  "description": "A due date for the card"
                },
                {
                  "key": "start",
                  "value": "{{start}}",
                  "disabled": true,
                  "description": "The start date of a card, or `null`"
                },
                {
                  "key": "dueComplete",
                  "value": "{{dueComplete}}",
                  "disabled": true
                },
                {
                  "key": "idList",
                  "value": "{{idList}}",
                  "disabled": false,
                  "description": "The ID of the list the card should be created in"
                },
                {
                  "key": "idMembers",
                  "value": "{{idMembers}}",
                  "disabled": true,
                  "description": "Comma-separated list of member IDs to add to the card"
                },
                {
                  "key": "idLabels",
                  "value": "{{idLabels}}",
                  "disabled": true,
                  "description": "Comma-separated list of label IDs to add to the card"
                },
                {
                  "key": "urlSource",
                  "value": "{{urlSource}}",
                  "disabled": true,
                  "description": "A URL starting with `http://` or `https://`"
                },
                {
                  "key": "fileSource",
                  "value": "{{fileSource}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "mimeType",
                  "value": "{{mimeType}}",
                  "disabled": true,
                  "description": "The mimeType of the attachment. Max length 256"
                },
                {
                  "key": "idCardSource",
                  "value": "{{idCardSource}}",
                  "disabled": true,
                  "description": "The ID of a card to copy into the new card"
                },
                {
                  "key": "keepFromSource",
                  "value": "{{keepFromSource}}",
                  "disabled": true,
                  "description": "If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,customFields,comments,due,start,labels,members,start,stickers`"
                },
                {
                  "key": "address",
                  "value": "{{address}}",
                  "disabled": true,
                  "description": "For use with/by the Map View"
                },
                {
                  "key": "locationName",
                  "value": "{{locationName}}",
                  "disabled": true,
                  "description": "For use with/by the Map View"
                },
                {
                  "key": "coordinates",
                  "value": "{{coordinates}}",
                  "disabled": true,
                  "description": "For use with/by the Map View. Should take the form latitude,longitude"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, start, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`"
                },
                {
                  "key": "actions",
                  "value": "{{actions}}",
                  "disabled": true,
                  "description": "See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)"
                },
                {
                  "key": "attachments",
                  "value": "{{attachments}}",
                  "disabled": true,
                  "description": "`true`, `false`, or `cover`"
                },
                {
                  "key": "attachment_fields",
                  "value": "{{attachment_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "members",
                  "value": "{{members}}",
                  "disabled": true,
                  "description": "Whether to return member objects for members on the card"
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`"
                },
                {
                  "key": "membersVoted",
                  "value": "{{membersVoted}}",
                  "disabled": true,
                  "description": "Whether to return member objects for members who voted on the card"
                },
                {
                  "key": "memberVoted_fields",
                  "value": "{{memberVoted_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/). **Defaults**: `avatarHash, fullName, initials, username`"
                },
                {
                  "key": "checkItemStates",
                  "value": "{{checkItemStates}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "checklists",
                  "value": "{{checklists}}",
                  "disabled": true,
                  "description": "Whether to return the checklists on the card. `all` or `none`"
                },
                {
                  "key": "checklist_fields",
                  "value": "{{checklist_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of `idBoard,idCard,name,pos`"
                },
                {
                  "key": "board",
                  "value": "{{board}}",
                  "disabled": true,
                  "description": "Whether to return the board object the card is on"
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`"
                },
                {
                  "key": "list",
                  "value": "{{list}}",
                  "disabled": true,
                  "description": "See the [Lists Nested Resource](/cloud/trello/guides/rest-api/nested-resources/)"
                },
                {
                  "key": "pluginData",
                  "value": "{{pluginData}}",
                  "disabled": true,
                  "description": "Whether to include pluginData on the card with the response"
                },
                {
                  "key": "stickers",
                  "value": "{{stickers}}",
                  "disabled": true,
                  "description": "Whether to include sticker models with the response"
                },
                {
                  "key": "sticker_fields",
                  "value": "{{sticker_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "customFieldItems",
                  "value": "{{customFieldItems}}",
                  "disabled": true,
                  "description": "Whether to include the customFieldItems"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a card by its ID",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The new name for the card"
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "The new description for the card"
                },
                {
                  "key": "closed",
                  "value": "{{closed}}",
                  "disabled": true,
                  "description": "Whether the card should be archived (closed: true)"
                },
                {
                  "key": "idMembers",
                  "value": "{{idMembers}}",
                  "disabled": true,
                  "description": "Comma-separated list of member IDs"
                },
                {
                  "key": "idAttachmentCover",
                  "value": "{{idAttachmentCover}}",
                  "disabled": true,
                  "description": "The ID of the image attachment the card should use as its cover, or null for none"
                },
                {
                  "key": "idList",
                  "value": "{{idList}}",
                  "disabled": true,
                  "description": "The ID of the list the card should be in"
                },
                {
                  "key": "idLabels",
                  "value": "{{idLabels}}",
                  "disabled": true,
                  "description": "Comma-separated list of label IDs"
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": true,
                  "description": "The ID of the board the card should be on"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "The position of the card in its list. `top`, `bottom`, or a positive float"
                },
                {
                  "key": "due",
                  "value": "{{due}}",
                  "disabled": true,
                  "description": "When the card is due, or `null`"
                },
                {
                  "key": "start",
                  "value": "{{start}}",
                  "disabled": true,
                  "description": "The start date of a card, or `null`"
                },
                {
                  "key": "dueComplete",
                  "value": "{{dueComplete}}",
                  "disabled": true,
                  "description": "Whether the due date should be marked complete"
                },
                {
                  "key": "subscribed",
                  "value": "{{subscribed}}",
                  "disabled": true,
                  "description": "Whether the member is should be subscribed to the card"
                },
                {
                  "key": "address",
                  "value": "{{address}}",
                  "disabled": true,
                  "description": "For use with/by the Map View"
                },
                {
                  "key": "locationName",
                  "value": "{{locationName}}",
                  "disabled": true,
                  "description": "For use with/by the Map View"
                },
                {
                  "key": "coordinates",
                  "value": "{{coordinates}}",
                  "disabled": true,
                  "description": "For use with/by the Map View. Should be latitude,longitude"
                },
                {
                  "key": "cover",
                  "value": "{{cover}}",
                  "disabled": true,
                  "description": "Updates the card's cover\n | Option | Values | About |\n |--------|--------|-------|\n | color | `pink`, `yellow`, `lime`, `blue`, `black`, `orange`, `red`, `purple`, `sky`, `green` | Makes the cover a solid color . |\n | brightness | `dark`, `light` | Determines whether the text on the cover should be dark or light.\n | url | An unsplash URL: https://images.unsplash.com | Used if making an image the cover. Only Unsplash URLs work.\n | idAttachment | ID of an attachment on the card | Used if setting an attached image as the cover. |\n | size | `normal`, `full` | Determines whether to show the card name on the cover, or below it. |\n \n `brightness` can be sent alongside any of the other parameters, but all of the other parameters are mutually exclusive; you can not have the cover be a `color` and an `idAttachment` at the same time. \n \n On the brightness options, setting it to light will make the text on the card cover dark:\n ![](/cloud/trello/images/rest/cards/cover-brightness-dark.png)\n \n And vice versa, setting it to dark will make the text on the card cover light: \n ![](/cloud/trello/images/rest/cards/cover-brightness-light.png) "
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a Card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a field on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "The desired field.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific property of a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Actions on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/actions",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/)."
                },
                {
                  "key": "page",
                  "value": "{{page}}",
                  "disabled": true,
                  "description": "The page of results for actions. Each page of results has 50 actions."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the Actions on a Card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Attachments on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/attachments",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of attachment [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "Use `cover` to restrict to just the cover attachment"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the attachments on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Attachment On Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/attachments",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The name of the attachment. Max length 256."
                },
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": true,
                  "description": "The file to attach, as multipart/form-data"
                },
                {
                  "key": "mimeType",
                  "value": "{{mimeType}}",
                  "disabled": true,
                  "description": "The mimeType of the attachment. Max length 256"
                },
                {
                  "key": "url",
                  "value": "{{url}}",
                  "disabled": true,
                  "description": "A URL to attach. Must start with `http://` or `https://`"
                },
                {
                  "key": "setCover",
                  "value": "{{setCover}}",
                  "disabled": true,
                  "description": "Determines whether to use the new attachment as a cover for the Card."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create an Attachment to a Card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get an Attachment on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/attachments/:idAttachment",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "The Attachment fields to be included in the response."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific Attachment on a Card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete an Attachment on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/attachments/:idAttachment",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idAttachment",
                  "value": "{{idAttachment}}",
                  "description": "The ID of the attachment to delete",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete an Attachment",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Board the Card is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/board",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the board a card is on",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get checkItems on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checkItemStates",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `idCheckItem`, `state`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the completed checklist items on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Checklists on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checklists",
              "query": [
                {
                  "key": "checkItems",
                  "value": "{{checkItems}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                },
                {
                  "key": "checkItem_fields",
                  "value": "{{checkItem_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `name,nameData,pos,state,type,due,dueReminder,idMember`"
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `idBoard,idCard,name,pos`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the checklists on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Checklist on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checklists",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The name of the checklist"
                },
                {
                  "key": "idChecklistSource",
                  "value": "{{idChecklistSource}}",
                  "disabled": true,
                  "description": "The ID of a source checklist to copy into the new one"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "The position of the checklist on the card. One of: `top`, `bottom`, or a positive number."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create a new checklist on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get checkItem on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checkItem/:idCheckItem",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of `name,nameData,pos,state,type,due,dueReminder,idMember`"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get a specific checkItem on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a checkItem on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checkItem/:idCheckItem",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The new name for the checklist item"
                },
                {
                  "key": "state",
                  "value": "{{state}}",
                  "disabled": true,
                  "description": "One of: `complete`, `incomplete`"
                },
                {
                  "key": "idChecklist",
                  "value": "{{idChecklist}}",
                  "disabled": true,
                  "description": "The ID of the checklist this item is in"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "`top`, `bottom`, or a positive float"
                },
                {
                  "key": "due",
                  "value": "{{due}}",
                  "disabled": true,
                  "description": "A due date for the checkitem"
                },
                {
                  "key": "dueReminder",
                  "value": "{{dueReminder}}",
                  "disabled": true,
                  "description": "A dueReminder for the due date on the checkitem"
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "disabled": true,
                  "description": "The ID of the member to remove from the card"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update an item in a checklist on a card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete checkItem on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checkItem/:idCheckItem",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a checklist item",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the List of a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/list",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the list a card is in",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Members of a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/members",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the members on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Members who have voted on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/membersVoted",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get the members who have voted on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add Member vote to Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/membersVoted",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The ID of the member to vote 'yes' on the card"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Vote on the card for a given member.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get pluginData on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/pluginData",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get any shared pluginData on a card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Stickers on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/stickers",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the stickers on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add a Sticker to a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/stickers",
              "query": [
                {
                  "key": "image",
                  "value": "{{image}}",
                  "disabled": false,
                  "description": "For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)"
                },
                {
                  "key": "top",
                  "value": "{{top}}",
                  "disabled": false,
                  "description": "The top position of the sticker, from -60 to 100"
                },
                {
                  "key": "left",
                  "value": "{{left}}",
                  "disabled": false,
                  "description": "The left position of the sticker, from -60 to 100"
                },
                {
                  "key": "zIndex",
                  "value": "{{zIndex}}",
                  "disabled": false,
                  "description": "The z-index of the sticker"
                },
                {
                  "key": "rotate",
                  "value": "{{rotate}}",
                  "disabled": true,
                  "description": "The rotation of the sticker"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Add a sticker to a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Sticker on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/stickers/:idSticker",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of sticker [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get a specific sticker on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Sticker on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/stickers/:idSticker",
              "query": [
                {
                  "key": "top",
                  "value": "{{top}}",
                  "disabled": false,
                  "description": "The top position of the sticker, from -60 to 100"
                },
                {
                  "key": "left",
                  "value": "{{left}}",
                  "disabled": false,
                  "description": "The left position of the sticker, from -60 to 100"
                },
                {
                  "key": "zIndex",
                  "value": "{{zIndex}}",
                  "disabled": false,
                  "description": "The z-index of the sticker"
                },
                {
                  "key": "rotate",
                  "value": "{{rotate}}",
                  "disabled": true,
                  "description": "The rotation of the sticker"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update a sticker on a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Sticker on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/stickers/:idSticker",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a sticker from the card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Comment Action on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/actions/:idAction/comments",
              "query": [
                {
                  "key": "text",
                  "value": "{{text}}",
                  "disabled": false,
                  "description": "The new text for the comment"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update an existing comment",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a comment on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/actions/:idAction/comments",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a comment",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Custom Field item on Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:idCard/customField/:idCustomField/item",
              "query": [],
              "variable": [
                {
                  "key": "idCard",
                  "value": "{{idCard}}",
                  "description": "ID of the card that the Custom Field value should be set/updated for",
                  "disabled": false
                },
                {
                  "key": "idCustomField",
                  "value": "{{idCustomField}}",
                  "description": "ID of the Custom Field on the card.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Setting, updating, and removing the value for a Custom Field on a card. For more details on updating custom fields check out the [Getting Started With Custom Fields](/cloud/trello/guides/rest-api/getting-started-with-custom-fields/)",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Update Multiple Custom Field items on Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:idCard/customFields",
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Setting, updating, and removing the values for multiple Custom Fields on a card. For more details on updating custom fields check out the [Getting Started With Custom Fields](/cloud/trello/guides/rest-api/getting-started-with-custom-fields/)",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get Custom Field Items for a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/customFieldItems",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the custom field items for a card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add a new comment to a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/actions/comments",
              "query": [
                {
                  "key": "text",
                  "value": "{{text}}",
                  "disabled": false,
                  "description": "The comment"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Add a new comment to a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add a Label to a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/idLabels",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": true,
                  "description": "The ID of the label to add"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Add a label to a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add a Member to a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/idMembers",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": true,
                  "description": "The ID of the Member to add to the card"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Add a member to a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a new Label on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/labels",
              "query": [
                {
                  "key": "color",
                  "value": "{{color}}",
                  "disabled": false,
                  "description": "A valid label color or `null`. See [labels](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "A name for the label"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create a new label for the board and add it to the given card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Mark a Card's Notifications as read",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/markAssociatedNotificationsRead",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Mark notifications about this card as read",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Label from a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/idLabels/:idLabel",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idLabel",
                  "value": "{{idLabel}}",
                  "description": "The ID of the label to remove",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a label from a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Member from a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/idMembers/:idMember",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID of the member to remove from the card",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a member from a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Member's Vote on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/membersVoted/:idMember",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID of the member whose vote to remove",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a member's vote from a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Checkitem on Checklist on Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:idCard/checklist/:idChecklist/checkItem/:idCheckItem",
              "query": [
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "`top`, `bottom`, or a positive float"
                }
              ],
              "variable": [
                {
                  "key": "idCard",
                  "value": "{{idCard}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idCheckItem",
                  "value": "{{idCheckItem}}",
                  "description": "The ID of the checklist item to update",
                  "disabled": false
                },
                {
                  "key": "idChecklist",
                  "value": "{{idChecklist}}",
                  "description": "The ID of the item to update.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update an item in a checklist on a card.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Checklist on a Card",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}cards/:id/checklists/:idChecklist",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Card",
                  "disabled": false
                },
                {
                  "key": "idChecklist",
                  "value": "{{idChecklist}}",
                  "description": "The ID of the checklist to delete",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a checklist from a card",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Checklists",
      "item": [
        {
          "name": "Create a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists",
              "query": [
                {
                  "key": "idCard",
                  "value": "{{idCard}}",
                  "disabled": false,
                  "description": "The ID of the Card that the checklist should be added to."
                },
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The name of the checklist. Should be a string of length 1 to 16384."
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "The position of the checklist on the card. One of: `top`, `bottom`, or a positive number."
                },
                {
                  "key": "idChecklistSource",
                  "value": "{{idChecklistSource}}",
                  "disabled": true,
                  "description": "The ID of a checklist to copy into the new checklist."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id",
              "query": [
                {
                  "key": "cards",
                  "value": "{{cards}}",
                  "disabled": true,
                  "description": "Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource)."
                },
                {
                  "key": "checkItems",
                  "value": "{{checkItems}}",
                  "disabled": true,
                  "description": "The check items on the list to return. One of: `all`, `none`."
                },
                {
                  "key": "checkItem_fields",
                  "value": "{{checkItem_fields}}",
                  "disabled": true,
                  "description": "The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`, `due`, `dueReminder`, `idMember`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of checklist [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "Name of the new checklist being created. Should be length of 1 to 16384."
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update an existing checklist.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a checklist",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get field on a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/:field",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update field on a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/:field",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The value to change the checklist name to. Should be a string of length 1 to 16384."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Board the Checklist is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/board",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of a checklist.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Card a Checklist is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/cards",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of a checklist.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Checkitems on a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/checkItems",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of: `all`, `none`."
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "One of: `all`, `name`, `nameData`, `pos`, `state`,`type`, `due`, `dueReminder`, `idMember`."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Checkitem on Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/checkItems",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "The name of the new check item on the checklist. Should be a string of length 1 to 16384."
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number."
                },
                {
                  "key": "checked",
                  "value": "{{checked}}",
                  "disabled": true,
                  "description": "Determines whether the check item is already checked when created."
                },
                {
                  "key": "due",
                  "value": "{{due}}",
                  "disabled": true,
                  "description": "A due date for the checkitem"
                },
                {
                  "key": "dueReminder",
                  "value": "{{dueReminder}}",
                  "disabled": true,
                  "description": "A dueReminder for the due date on the checkitem"
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "disabled": true,
                  "description": "An ID of a member resource."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Checkitem on a Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/checkItems/:idCheckItem",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "One of: `all`, `name`, `nameData`, `pos`, `state`, `type`, `due`, `dueReminder`, `idMember`,."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Checkitem from Checklist",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}checklists/:id/checkItems/:idCheckItem",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove an item from a checklist",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "CustomFields",
      "item": [
        {
          "name": "Create a new Custom Field on a Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new Custom Field on a board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get a Custom Field",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Custom Field definition",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id",
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a Custom Field definition.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete a Custom Field definition",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a Custom Field from a board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Options of Custom Field drop down",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id/options",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get the options of a drop down Custom Field",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Add Option to Custom Field dropdown",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id/options",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Add an option to a dropdown Custom Field",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Option of Custom Field dropdown",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id/options/:idCustomFieldOption",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Retrieve a specific, existing Option on a given dropdown-type Custom Field",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Option of Custom Field dropdown",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}customFields/:id/options/:idCustomFieldOption",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete an option from a Custom Field dropdown.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Emoji",
      "item": [
        {
          "name": "List available Emoji",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}emoji",
              "query": [
                {
                  "key": "locale",
                  "value": "{{locale}}",
                  "disabled": true,
                  "description": "The locale to return emoji descriptions and names in. Defaults to the logged in member's locale."
                },
                {
                  "key": "spritesheets",
                  "value": "{{spritesheets}}",
                  "disabled": true,
                  "description": "`true` to return spritesheet URLs in the response"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List available Emoji"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Enterprises",
      "item": [
        {
          "name": "Get an Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`"
                },
                {
                  "key": "members",
                  "value": "{{members}}",
                  "disabled": true,
                  "description": "One of: `none`, `normal`, `admins`, `owners`, `all`"
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "One of: `avatarHash`, `fullName`, `initials`, `username`"
                },
                {
                  "key": "member_filter",
                  "value": "{{member_filter}}",
                  "disabled": true,
                  "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated."
                },
                {
                  "key": "member_sort",
                  "value": "{{member_sort}}",
                  "disabled": true,
                  "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
                },
                {
                  "key": "member_sortBy",
                  "value": "{{member_sortBy}}",
                  "disabled": true,
                  "description": "Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state."
                },
                {
                  "key": "member_sortOrder",
                  "value": "{{member_sortOrder}}",
                  "disabled": true,
                  "description": "Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`"
                },
                {
                  "key": "member_startIndex",
                  "value": "{{member_startIndex}}",
                  "disabled": true,
                  "description": "Any integer between 0 and 100."
                },
                {
                  "key": "member_count",
                  "value": "{{member_count}}",
                  "disabled": true,
                  "description": "0 to 100"
                },
                {
                  "key": "organizations",
                  "value": "{{organizations}}",
                  "disabled": true,
                  "description": "One of: `none`, `members`, `public`, `all`"
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested organization field resource]() accepts."
                },
                {
                  "key": "organization_paid_accounts",
                  "value": "{{organization_paid_accounts}}",
                  "disabled": true,
                  "description": "Whether or not to include paid account information in the returned workspace objects"
                },
                {
                  "key": "organization_memberships",
                  "value": "{{organization_memberships}}",
                  "disabled": true,
                  "description": "Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get an enterprise by its ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get auditlog data for an Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/auditlog",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns an array of Actions related to the Enterprise object. Used for populating data sent to Google Sheets from an Enterprise's audit log page: https://trello.com/e/{enterprise_name}/admin/auditlog. An Enterprise admin token is required for this route. \n\n NOTE: For enterprises that have opted in to user management via AdminHub, the auditlog will will contain actions taken in AdminHub, but may not contain the source for those actions.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Enterprise admin Members",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/admins",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested member field resource]() accepts."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get an enterprise's admin members.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get signupUrl for Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/signupUrl",
              "query": [
                {
                  "key": "authenticate",
                  "value": "{{authenticate}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "confirmationAccepted",
                  "value": "{{confirmationAccepted}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "returnUrl",
                  "value": "{{returnUrl}}",
                  "disabled": true,
                  "description": "Any valid URL."
                },
                {
                  "key": "tosAccepted",
                  "value": "{{tosAccepted}}",
                  "disabled": true,
                  "description": "Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the signup URL for an enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Users of an Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/members/query",
              "query": [
                {
                  "key": "licensed",
                  "value": "{{licensed}}",
                  "disabled": true,
                  "description": "When true, returns members who possess a license for the corresponding Trello Enterprise; when false, returns members who do not. If unspecified, both licensed and unlicensed members will be returned."
                },
                {
                  "key": "deactivated",
                  "value": "{{deactivated}}",
                  "disabled": true,
                  "description": "When true, returns members who have been deactivated for the corresponding Trello Enterprise; when false, returns members who have not. If unspecified, both active and deactivated members will be returned."
                },
                {
                  "key": "collaborator",
                  "value": "{{collaborator}}",
                  "disabled": true,
                  "description": "When true, returns members who are guests on one or more boards in the corresponding Trello Enterprise (but do not possess a license); when false, returns members who are not. If unspecified, both guests and non-guests will be returned."
                },
                {
                  "key": "managed",
                  "value": "{{managed}}",
                  "disabled": true,
                  "description": "When true, returns members who are managed by the corresponding Trello Enterprise; when false, returns members who are not. If unspecified, both managed and unmanaged members will be returned."
                },
                {
                  "key": "admin",
                  "value": "{{admin}}",
                  "disabled": true,
                  "description": "When true, returns members who are administrators of the corresponding Trello Enterprise; when false, returns members who are not. If unspecified, both admin and non-admin members will be returned."
                },
                {
                  "key": "activeSince",
                  "value": "{{activeSince}}",
                  "disabled": true,
                  "description": "Returns only Trello users active since this date (inclusive)."
                },
                {
                  "key": "inactiveSince",
                  "value": "{{inactiveSince}}",
                  "disabled": true,
                  "description": "Returns only Trello users active since this date (inclusive)."
                },
                {
                  "key": "search",
                  "value": "{{search}}",
                  "disabled": true,
                  "description": "Returns members with email address or full name that start with the search value."
                },
                {
                  "key": "startIndex",
                  "value": "{{startIndex}}",
                  "disabled": true,
                  "description": "Cursor to return next set of results"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "[BETA] - Get an enterprise's users. You can choose to retrieve licensed members, board guests, etc.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Members of Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/members",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object)."
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
                },
                {
                  "key": "sortBy",
                  "value": "{{sortBy}}",
                  "disabled": true,
                  "description": "Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
                },
                {
                  "key": "sortOrder",
                  "value": "{{sortOrder}}",
                  "disabled": true,
                  "description": "Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`."
                },
                {
                  "key": "startIndex",
                  "value": "{{startIndex}}",
                  "disabled": true,
                  "description": "Any integer between 0 and 9999."
                },
                {
                  "key": "count",
                  "value": "{{count}}",
                  "disabled": true,
                  "description": "[SCIM-style filter](/cloud/trello/scim/)."
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the members of an enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member of Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/members/:idMember",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "A comma separated list of any valid values that the [nested member field resource]() accepts."
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "An ID of a member resource.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific member of an enterprise by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get whether an organization can be transferred to an enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/transferrable/organization/:idOrganization",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idOrganization",
                  "value": "{{idOrganization}}",
                  "description": "An ID of an Organization resource.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get whether an organization can be transferred to an enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a bulk list of organizations that can be transferred to an enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/transferrable/bulk/:idOrganizations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idOrganizations",
                  "value": "{{idOrganizations}}",
                  "description": "An array of IDs of an Organization resource.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a list of organizations that can be transferred to an enterprise when given a bulk list of organizations.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Decline enterpriseJoinRequests from one organization or a bulk list of organizations.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/$:id/enterpriseJoinRequest/bulk",
              "query": [
                {
                  "key": "idOrganizations",
                  "value": "{{idOrganizations}}",
                  "disabled": false,
                  "description": "An array of IDs of an Organization resource."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Decline enterpriseJoinRequests from one organization or bulk amount of organizations",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get ClaimableOrganizations of an Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/claimableOrganizations",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Limits the number of workspaces to be sorted"
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Specifies the sort order to return matching documents"
                },
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "Name of the enterprise to retrieve workspaces for"
                },
                {
                  "key": "activeSince",
                  "value": "{{activeSince}}",
                  "disabled": true,
                  "description": "Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace"
                },
                {
                  "key": "inactiveSince",
                  "value": "{{inactiveSince}}",
                  "disabled": true,
                  "description": "Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Workspaces that are claimable by the enterprise by ID. Can optionally query for workspaces based on activeness/ inactiveness.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get PendingOrganizations of an Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/pendingOrganizations",
              "query": [
                {
                  "key": "activeSince",
                  "value": "{{activeSince}}",
                  "disabled": true,
                  "description": "Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace"
                },
                {
                  "key": "inactiveSince",
                  "value": "{{inactiveSince}}",
                  "disabled": true,
                  "description": "Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the Workspaces that are pending for the enterprise by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create an auth Token for an Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/tokens",
              "query": [
                {
                  "key": "expiration",
                  "value": "{{expiration}}",
                  "disabled": true,
                  "description": "One of: `1hour`, `1day`, `30days`, `never`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create an auth Token for an Enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Transfer an Organization to an Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/organizations",
              "query": [
                {
                  "key": "idOrganization",
                  "value": "{{idOrganization}}",
                  "disabled": false,
                  "description": "ID of Organization to be transferred to Enterprise."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Transfer an organization to an enterprise.\n\n NOTE: For enterprises that have opted in to user management via AdminHub, this endpoint will result in the organization being added to the enterprise asynchronously. A 200 response only indicates receipt of the request, it does not indicate successful addition to the enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Member's licensed status",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/members/:idMember/licensed",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Boolean value to determine whether the user should be given an Enterprise license (true) or not (false)."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise.",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID of the Member",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "This endpoint is used to update whether the provided Member should use one of the Enterprise's available licenses or not. Revoking a license will deactivate a Member of an Enterprise. \n\n NOTE: Revoking of licenses is not possible for enterprises that have opted in to user management via AdminHub.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Deactivate a Member of an Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/members/:idMember/deactivated",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "Determines whether the user is deactivated or not."
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "A comma separated list of any valid values that the [nested member field resource]() accepts."
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested organization resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "ID of the Member to deactive.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Deactivate a Member of an Enterprise.\n\n NOTE: Deactivation is not possible for enterprises that have opted in to user management via AdminHub.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Member to be admin of Enterprise",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/admins/:idMember",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "ID of member to be made an admin of enterprise.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Make Member an admin of Enterprise.\n\n NOTE: This endpoint is not available to enterprises that have opted in to user management via AdminHub.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Member as admin from Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/admins/:idMember",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the Enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "ID of the member to be removed as an admin from enterprise.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a member as admin from an enterprise.\n\n NOTE: This endpoint is not available to enterprises that have opted in to user management via AdminHub.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete an Organization from an Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/organizations/:idOrg",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idOrg",
                  "value": "{{idOrg}}",
                  "description": "ID of the organization to be removed from the enterprise.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove an organization from an enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Bulk accept a set of organizations to an Enterprise.",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}enterprises/:id/organizations/bulk/:idOrganizations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the enterprise to retrieve.",
                  "disabled": false
                },
                {
                  "key": "idOrganizations",
                  "value": "{{idOrganizations}}",
                  "description": "An array of IDs of the organizations to be removed from the enterprise.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Accept an array of organizations to an enterprise.\n\n NOTE: For enterprises that have opted in to user management via AdminHub, this endpoint will result in organizations being added to the enterprise asynchronously. A 200 response only indicates receipt of the request, it does not indicate successful addition to the enterprise.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Labels",
      "item": [
        {
          "name": "Get a Label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "all or a comma-separated list of [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get information about a single Label.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The new name for the label"
                },
                {
                  "key": "color",
                  "value": "{{color}}",
                  "disabled": true,
                  "description": "The new color for the label. See: [fields](/cloud/trello/guides/rest-api/object-definitions/) for color options"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update a label by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a label by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a field on a label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id/:field",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The new value for the field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The id of the label",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "The field on the Label to update.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Update a field on a label.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "Name for the label"
                },
                {
                  "key": "color",
                  "value": "{{color}}",
                  "disabled": false,
                  "description": "The color for the label."
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": false,
                  "description": "The ID of the Board to create the Label on."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Create a new Label on a Board.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Lists",
      "item": [
        {
          "name": "Get a List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma separated list of List field names."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [],
            "description": "Get information about a List",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "New name for the list"
                },
                {
                  "key": "closed",
                  "value": "{{closed}}",
                  "disabled": true,
                  "description": "Whether the list should be closed (archived)"
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": true,
                  "description": "ID of a board the list should be moved to"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "New position for the list: `top`, `bottom`, or a positive floating point number"
                },
                {
                  "key": "subscribed",
                  "value": "{{subscribed}}",
                  "disabled": true,
                  "description": "Whether the active member is subscribed to this list"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update the properties of a List",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a new List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "Name for the list"
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": false,
                  "description": "The long ID of the board the list should be created on"
                },
                {
                  "key": "idListSource",
                  "value": "{{idListSource}}",
                  "disabled": true,
                  "description": "ID of the List to copy into the new List"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "Position of the list. `top`, `bottom`, or a positive floating point number"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [],
            "description": "Create a new List on a Board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Archive all Cards in List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/archiveAllCards",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Archive all cards in a list",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Move all Cards in List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/moveAllCards",
              "query": [
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": false,
                  "description": "The ID of the board the cards should be moved to"
                },
                {
                  "key": "idList",
                  "value": "{{idList}}",
                  "disabled": false,
                  "description": "The ID of the list that the cards should be moved to"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Move all Cards in a List",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Archive or unarchive a list",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/closed",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": true,
                  "description": "Set to true to close (archive) the list"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Archive or unarchive a list",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Move List to Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/idBoard",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The ID of the board to move the list to"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Move a List to a different Board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a field on a List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/:field",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": true,
                  "description": "The new value for the field"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "The field on the List to be updated",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Rename a list",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Actions for a List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/actions",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/)."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the Actions on a List",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Board a List is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/board",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/#board-object)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get the board a list is on",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Cards in a List",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}lists/:id/cards",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the list",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the cards in a list",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Members",
      "item": [
        {
          "name": "Get a Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id",
              "query": [
                {
                  "key": "actions",
                  "value": "{{actions}}",
                  "disabled": true,
                  "description": "See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)"
                },
                {
                  "key": "boards",
                  "value": "{{boards}}",
                  "disabled": true,
                  "description": "See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)"
                },
                {
                  "key": "boardBackgrounds",
                  "value": "{{boardBackgrounds}}",
                  "disabled": true,
                  "description": "One of: `all`, `custom`, `default`, `none`, `premium`"
                },
                {
                  "key": "boardsInvited",
                  "value": "{{boardsInvited}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned"
                },
                {
                  "key": "boardsInvited_fields",
                  "value": "{{boardsInvited_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "boardStars",
                  "value": "{{boardStars}}",
                  "disabled": true,
                  "description": "Whether to return the boardStars or not"
                },
                {
                  "key": "cards",
                  "value": "{{cards}}",
                  "disabled": true,
                  "description": "See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options"
                },
                {
                  "key": "customBoardBackgrounds",
                  "value": "{{customBoardBackgrounds}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                },
                {
                  "key": "customEmoji",
                  "value": "{{customEmoji}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                },
                {
                  "key": "customStickers",
                  "value": "{{customStickers}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "notifications",
                  "value": "{{notifications}}",
                  "disabled": true,
                  "description": "See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)"
                },
                {
                  "key": "organizations",
                  "value": "{{organizations}}",
                  "disabled": true,
                  "description": "One of: `all`, `members`, `none`, `public`"
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "organization_paid_account",
                  "value": "{{organization_paid_account}}",
                  "disabled": true,
                  "description": "Whether or not to include paid account information in the returned workspace object"
                },
                {
                  "key": "organizationsInvited",
                  "value": "{{organizationsInvited}}",
                  "disabled": true,
                  "description": "One of: `all`, `members`, `none`, `public`"
                },
                {
                  "key": "organizationsInvited_fields",
                  "value": "{{organizationsInvited_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "paid_account",
                  "value": "{{paid_account}}",
                  "disabled": true,
                  "description": "Whether or not to include paid account information in the returned member object"
                },
                {
                  "key": "savedSearches",
                  "value": "{{savedSearches}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "tokens",
                  "value": "{{tokens}}",
                  "disabled": true,
                  "description": "`all` or `none`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id",
              "query": [
                {
                  "key": "fullName",
                  "value": "{{fullName}}",
                  "disabled": true,
                  "description": "New name for the member. Cannot begin or end with a space."
                },
                {
                  "key": "initials",
                  "value": "{{initials}}",
                  "disabled": true,
                  "description": "New initials for the member. 1-4 characters long."
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true,
                  "description": "New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique."
                },
                {
                  "key": "bio",
                  "value": "{{bio}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "avatarSource",
                  "value": "{{avatarSource}}",
                  "disabled": true,
                  "description": "One of: `gravatar`, `none`, `upload`"
                },
                {
                  "key": "prefs/colorBlind",
                  "value": "{{prefs/colorBlind}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "prefs/locale",
                  "value": "{{prefs/locale}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "prefs/minutesBetweenSummaries",
                  "value": "{{prefs/minutesBetweenSummaries}}",
                  "disabled": true,
                  "description": "`-1` for disabled, `1`, or `60`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a Member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a field on a Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "One of the member [fields](/cloud/trello/guides/rest-api/object-definitions/)",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a particular property of a member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's Actions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/actions",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "A comma-separated list of [action types](https://developer.atlassian.com/cloud/trello/guides/rest-api/action-types/)."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the actions for a member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's custom Board backgrounds",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardBackgrounds",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of: `all`, `custom`, `default`, `none`, `premium`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's custom board backgrounds",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Upload new boardBackground for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardBackgrounds",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": false,
                  "description": ""
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Upload a new boardBackground",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a boardBackground of a Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardBackgrounds/:idBackground",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Member's custom Board background",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardBackgrounds/:idBackground",
              "query": [
                {
                  "key": "brightness",
                  "value": "{{brightness}}",
                  "disabled": true,
                  "description": "One of: `dark`, `light`, `unknown`"
                },
                {
                  "key": "tile",
                  "value": "{{tile}}",
                  "disabled": true,
                  "description": "Whether the background should be tiled"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Member's custom Board background",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardBackgrounds/:idBackground",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's boardStars",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardStars",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "List a member's board stars",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Star for Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardStars",
              "query": [
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": false,
                  "description": "The ID of the board to star"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": false,
                  "description": "The position of the newly starred board. `top`, `bottom`, or a positive float."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Star a new board on behalf of a Member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a boardStar of Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardStars/:idStar",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific boardStar",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update the position of a boardStar of Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardStars/:idStar",
              "query": [
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "New position for the starred board. `top`, `bottom`, or a positive float."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update the position of a starred board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Star for Board",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardStars/:idStar",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Unstar a board",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Boards that Member belongs to",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boards",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "lists",
                  "value": "{{lists}}",
                  "disabled": true,
                  "description": "Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`"
                },
                {
                  "key": "organization",
                  "value": "{{organization}}",
                  "disabled": true,
                  "description": "Whether to include the Organization object with the Boards"
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Lists the boards that the user is a member of.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Boards the Member has been invited to",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/boardsInvited",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the boards the member has been invited to",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Cards the Member is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/cards",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of: `all`, `closed`, `none`, `open`, `visible`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Gets the cards a member is on",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's custom Board Backgrounds",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customBoardBackgrounds",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's custom board backgrounds",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a new custom Board Background",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customBoardBackgrounds",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": false,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Upload a new custom board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom Board Background of Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customBoardBackgrounds/:idBackground",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific custom board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update custom Board Background of Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customBoardBackgrounds/:idBackground",
              "query": [
                {
                  "key": "brightness",
                  "value": "{{brightness}}",
                  "disabled": true,
                  "description": "One of: `dark`, `light`, `unknown`"
                },
                {
                  "key": "tile",
                  "value": "{{tile}}",
                  "disabled": true,
                  "description": "Whether to tile the background"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a specific custom board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete custom Board Background of Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customBoardBackgrounds/:idBackground",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a specific custom board background",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's customEmojis",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customEmoji",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a Member's uploaded custom Emojis",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create custom Emoji for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customEmoji",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": false,
                  "description": ""
                },
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "Name for the emoji. 2 - 64 characters"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new custom Emoji",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's custom Emoji",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customEmoji/:idEmoji",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of `name`, `url`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                },
                {
                  "key": "idEmoji",
                  "value": "{{idEmoji}}",
                  "description": "The ID of the custom emoji",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a Member's custom Emoji",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's custom Stickers",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customStickers",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a Member's uploaded stickers",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create custom Sticker for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customStickers",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": false,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Upload a new custom sticker",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's custom Sticker",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customStickers/:idSticker",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of `scaled`, `url`"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a Member's custom Sticker",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Member's custom Sticker",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/customStickers/:idSticker",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a Member's custom Sticker",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's Notifications",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notifications",
              "query": [
                {
                  "key": "entities",
                  "value": "{{entities}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "display",
                  "value": "{{display}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "read_filter",
                  "value": "{{read_filter}}",
                  "disabled": true,
                  "description": "One of: `all`, `read`, `unread`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Max 1000"
                },
                {
                  "key": "page",
                  "value": "{{page}}",
                  "disabled": true,
                  "description": "Max 100"
                },
                {
                  "key": "before",
                  "value": "{{before}}",
                  "disabled": true,
                  "description": "A notification ID"
                },
                {
                  "key": "since",
                  "value": "{{since}}",
                  "disabled": true,
                  "description": "A notification ID"
                },
                {
                  "key": "memberCreator",
                  "value": "{{memberCreator}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "memberCreator_fields",
                  "value": "{{memberCreator_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's notifications",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's Organizations",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/organizations",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private Workspaces)"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "paid_account",
                  "value": "{{paid_account}}",
                  "disabled": true,
                  "description": "Whether or not to include paid account information in the returned workspace object"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's Workspaces",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Organizations a Member has been invited to",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/organizationsInvited",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's Workspaces they have been invited to",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's saved searched",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/savedSearches",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the saved searches of a Member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create saved Search for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/savedSearches",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": false,
                  "description": "The name for the saved search"
                },
                {
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": false,
                  "description": "The search query"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": false,
                  "description": "The position of the saved search. `top`, `bottom`, or a positive float."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a saved search",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a saved search",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/savedSearches/:idSearch",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a saved search",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a saved search",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/savedSearches/:idSearch",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "The new name for the saved search"
                },
                {
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true,
                  "description": "The new search query"
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "disabled": true,
                  "description": "New position for saves search. `top`, `bottom`, or a positive float."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a saved search",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a saved search",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/savedSearches/:idSearch",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a saved search",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Member's Tokens",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/tokens",
              "query": [
                {
                  "key": "webhooks",
                  "value": "{{webhooks}}",
                  "disabled": true,
                  "description": "Whether to include webhooks"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List a members app tokens",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Avatar for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/avatar",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": false,
                  "description": ""
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Create a new avatar for a member",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Dismiss a message for Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/oneTimeMessagesDismissed",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": "The message to dismiss"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or username of the member",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [],
            "description": "Dismiss a message",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Member's notification channel settings",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notificationsChannelSettings",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a member's notification channel settings",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update blocked notification keys of Member on a channel",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notificationsChannelSettings",
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update blocked notification keys of Member on a specific channel",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get blocked notification keys of Member on this channel",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notificationsChannelSettings/:channel",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get blocked notification keys of Member on a specific channel",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update blocked notification keys of Member on a channel",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notificationsChannelSettings/:channel",
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update blocked notification keys of Member on a specific channel",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Update blocked notification keys of Member on a channel",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}members/:id/notificationsChannelSettings/:channel/:blockedKeys",
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update blocked notification keys of Member on a specific channel",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get a Notification",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id",
              "query": [
                {
                  "key": "board",
                  "value": "{{board}}",
                  "disabled": true,
                  "description": "Whether to include the board object"
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "card",
                  "value": "{{card}}",
                  "disabled": true,
                  "description": "Whether to include the card object"
                },
                {
                  "key": "card_fields",
                  "value": "{{card_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "display",
                  "value": "{{display}}",
                  "disabled": true,
                  "description": "Whether to include the display object with the results"
                },
                {
                  "key": "entities",
                  "value": "{{entities}}",
                  "disabled": true,
                  "description": "Whether to include the entities object with the results"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "list",
                  "value": "{{list}}",
                  "disabled": true,
                  "description": "Whether to include the list object"
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to include the member object"
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "memberCreator",
                  "value": "{{memberCreator}}",
                  "disabled": true,
                  "description": "Whether to include the member object of the creator"
                },
                {
                  "key": "memberCreator_fields",
                  "value": "{{memberCreator_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                },
                {
                  "key": "organization",
                  "value": "{{organization}}",
                  "disabled": true,
                  "description": "Whether to include the organization object"
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Notification's read status",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id",
              "query": [
                {
                  "key": "unread",
                  "value": "{{unread}}",
                  "disabled": true,
                  "description": "Whether the notification should be marked as read or not"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update the read status of a notification",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a field of a Notification",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "A notification [field](/cloud/trello/guides/rest-api/object-definitions/)",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a specific property of a notification",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Mark all Notifications as read",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/all/read",
              "query": [
                {
                  "key": "read",
                  "value": "{{read}}",
                  "disabled": true,
                  "description": "Boolean to specify whether to mark as read or unread (defaults to `true`, marking as read)"
                },
                {
                  "key": "ids",
                  "value": "{{ids}}",
                  "disabled": true,
                  "description": "A comma-seperated list of IDs. Allows specifying an array of notification IDs to change the read state for. This will become useful as we add grouping of notifications to the UI, with a single button to mark all notifications in the group as read/unread."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Mark all notifications as read",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update Notification's read status",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/unread",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": true,
                  "description": ""
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update Notification's read status",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Board a Notification is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/board",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board[fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the board a notification is associated with",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Card a Notification is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/card",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of card [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the card a notification is associated with",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the List a Notification is on",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/list",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of list [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the list a notification is associated with",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Member a Notification is about (not the creator)",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/member",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the member (not the creator) a notification is about",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Member who created the Notification",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/memberCreator",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the member who created the notification",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Notification's associated Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}notifications/:id/organization",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get the organization a notification is associated with",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Organizations",
      "item": [
        {
          "name": "Create a new Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations",
              "query": [
                {
                  "key": "displayName",
                  "value": "{{displayName}}",
                  "disabled": false,
                  "description": "The name to display for the Organization"
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "The description for the organizations"
                },
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. If the name contains invalid characters, they will be removed. If the name conflicts with an existing name, a new name will be substituted."
                },
                {
                  "key": "website",
                  "value": "{{website}}",
                  "disabled": true,
                  "description": "A URL starting with `http://` or `https://`"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id",
              "query": [
                {
                  "key": "name",
                  "value": "{{name}}",
                  "disabled": true,
                  "description": "A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique"
                },
                {
                  "key": "displayName",
                  "value": "{{displayName}}",
                  "disabled": true,
                  "description": "A new displayName for the organization. Must be at least 1 character long and not begin or end with a space."
                },
                {
                  "key": "desc",
                  "value": "{{desc}}",
                  "disabled": true,
                  "description": "A new description for the organization"
                },
                {
                  "key": "website",
                  "value": "{{website}}",
                  "disabled": true,
                  "description": "A URL starting with `http://`, `https://`, or `null`"
                },
                {
                  "key": "prefs/associatedDomain",
                  "value": "{{prefs/associatedDomain}}",
                  "disabled": true,
                  "description": "The Google Apps domain to link this org to."
                },
                {
                  "key": "prefs/externalMembersDisabled",
                  "value": "{{prefs/externalMembersDisabled}}",
                  "disabled": true,
                  "description": "Whether non-workspace members can be added to boards inside the Workspace"
                },
                {
                  "key": "prefs/googleAppsVersion",
                  "value": "{{prefs/googleAppsVersion}}",
                  "disabled": true,
                  "description": "`1` or `2`"
                },
                {
                  "key": "prefs/boardVisibilityRestrict/org",
                  "value": "{{prefs/boardVisibilityRestrict/org}}",
                  "disabled": true,
                  "description": "Who on the Workspace can make Workspace visible boards. One of `admin`, `none`, `org`"
                },
                {
                  "key": "prefs/boardVisibilityRestrict/private",
                  "value": "{{prefs/boardVisibilityRestrict/private}}",
                  "disabled": true,
                  "description": "Who can make private boards. One of: `admin`, `none`, `org`"
                },
                {
                  "key": "prefs/boardVisibilityRestrict/public",
                  "value": "{{prefs/boardVisibilityRestrict/public}}",
                  "disabled": true,
                  "description": "Who on the Workspace can make public boards. One of: `admin`, `none`, `org`"
                },
                {
                  "key": "prefs/orgInviteRestrict",
                  "value": "{{prefs/orgInviteRestrict}}",
                  "disabled": true,
                  "description": "An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)"
                },
                {
                  "key": "prefs/permissionLevel",
                  "value": "{{prefs/permissionLevel}}",
                  "disabled": true,
                  "description": "Whether the Workspace page is publicly visible. One of: `private`, `public`"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update an organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete an Organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get field on Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "An organization [field](/cloud/trello/guides/rest-api/object-definitions/)",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Actions for Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/actions",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the actions on a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Boards in an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/boards",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`"
                },
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the boards in a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Retrieve Organization's Exports",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/exports",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve the exports that exist for the given organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Export for Organizations",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/exports",
              "query": [
                {
                  "key": "attachments",
                  "value": "{{attachments}}",
                  "disabled": true,
                  "description": "Whether the CSV should include attachments or not."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Kick off CSV export for an organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the Members of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the Organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the members in a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update an Organization's Members",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members",
              "query": [
                {
                  "key": "email",
                  "value": "{{email}}",
                  "disabled": false,
                  "description": "An email address"
                },
                {
                  "key": "fullName",
                  "value": "{{fullName}}",
                  "disabled": false,
                  "description": "Name for the member, at least 1 character not beginning or ending with a space"
                },
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": true,
                  "description": "One of: `admin`, `normal`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Memberships of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/memberships",
              "query": [
                {
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`"
                },
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to include the Member objects with the Memberships"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the memberships of a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Membership of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/memberships/:idMembership",
              "query": [
                {
                  "key": "member",
                  "value": "{{member}}",
                  "disabled": true,
                  "description": "Whether to include the Member object in the response"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idMembership",
                  "value": "{{idMembership}}",
                  "description": "The ID of the membership to load",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a single Membership for an Organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get the pluginData Scoped to Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/pluginData",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get organization scoped pluginData on this Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Tags of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/tags",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "List the organization's collections",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Tag in Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/tags",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a Tag in an Organization",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Member of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members/:idMember",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "One of: `admin`, `normal`"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID or username of the member to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Add a member to a Workspace or update their member type.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Member from an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members/:idMember",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID of the Member to remove from the Workspace",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a member from a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Deactivate or reactivate a member of an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members/:idMember/deactivated",
              "query": [
                {
                  "key": "value",
                  "value": "{{value}}",
                  "disabled": false,
                  "description": ""
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID or username of the member to update",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "description": "Deactivate or reactivate a member of a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update logo for an Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/logo",
              "query": [
                {
                  "key": "file",
                  "value": "{{file}}",
                  "disabled": true,
                  "description": "Image file for the logo"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the Workspace",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Set the logo image for a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Logo for Organization",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/logo",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a the logo from a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove a Member from an Organization and all Organization Boards",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/members/:idMember/all",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idMember",
                  "value": "{{idMember}}",
                  "description": "The ID of the member to remove from the Workspace",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove a member from a Workspace and from all Workspace boards",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Remove the associated Google Apps domain from a Workspace",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/prefs/associatedDomain",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove the associated Google Apps domain from a Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete the email domain restriction on who can be invited to the Workspace",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/prefs/orgInviteRestrict",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Remove the email domain restriction on who can be invited to the Workspace",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete an Organization's Tag",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/tags/:idTag",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idTag",
                  "value": "{{idTag}}",
                  "description": "The ID of the tag to delete",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete an organization's tag",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Organizations new billable guests",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}organizations/:id/newBillableGuests/:idBoard",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "description": "The ID of the board to check for new billable guests.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Used to check whether the given board has new billable guests on it.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Plugins",
      "item": [
        {
          "name": "Get a Plugin",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}plugins/:id/",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get plugins",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Plugin",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}plugins/:id/",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID or name of the organization",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a Plugin",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create a Listing for Plugin",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}plugins/:idPlugin/listing",
              "query": [],
              "variable": [
                {
                  "key": "idPlugin",
                  "value": "{{idPlugin}}",
                  "description": "The ID of the Power-Up for which you are creating a new listing.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new listing for a given locale for your Power-Up",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get Plugin's Member privacy compliance",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}plugins/:id/compliance/memberPrivacy",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Power-Up",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Updating Plugin's Listing",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}plugins/:idPlugin/listings/:idListing",
              "query": [],
              "variable": [
                {
                  "key": "idPlugin",
                  "value": "{{idPlugin}}",
                  "description": "The ID of the Power-Up whose listing is being updated.",
                  "disabled": false
                },
                {
                  "key": "idListing",
                  "value": "{{idListing}}",
                  "description": "The ID of the existing listing for the Power-Up that is being updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update an existing listing for your Power-Up",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Search",
      "item": [
        {
          "name": "Search Trello",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}search",
              "query": [
                {
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": false,
                  "description": "The search query with a length of 1 to 16384 characters"
                },
                {
                  "key": "idBoards",
                  "value": "{{idBoards}}",
                  "disabled": true,
                  "description": "`mine` or a comma-separated list of Board IDs"
                },
                {
                  "key": "idOrganizations",
                  "value": "{{idOrganizations}}",
                  "disabled": true,
                  "description": "A comma-separated list of Organization IDs"
                },
                {
                  "key": "idCards",
                  "value": "{{idCards}}",
                  "disabled": true,
                  "description": "A comma-separated list of Card IDs"
                },
                {
                  "key": "modelTypes",
                  "value": "{{modelTypes}}",
                  "disabled": true,
                  "description": "What type or types of Trello objects you want to search. all or a comma-separated list of: `actions`, `boards`, `cards`, `members`, `organizations`"
                },
                {
                  "key": "board_fields",
                  "value": "{{board_fields}}",
                  "disabled": true,
                  "description": "all or a comma-separated list of: `closed`, `dateLastActivity`, `dateLastView`, `desc`, `descData`, `idOrganization`, `invitations`, `invited`, `labelNames`, `memberships`, `name`, `pinned`, `powerUps`, `prefs`, `shortLink`, `shortUrl`, `starred`, `subscribed`, `url`"
                },
                {
                  "key": "boards_limit",
                  "value": "{{boards_limit}}",
                  "disabled": true,
                  "description": "The maximum number of boards returned. Maximum: 1000"
                },
                {
                  "key": "board_organization",
                  "value": "{{board_organization}}",
                  "disabled": true,
                  "description": "Whether to include the parent organization with board results"
                },
                {
                  "key": "card_fields",
                  "value": "{{card_fields}}",
                  "disabled": true,
                  "description": "all or a comma-separated list of: `badges`, `checkItemStates`, `closed`, `dateLastActivity`, `desc`, `descData`, `due`, `email`, `idAttachmentCover`, `idBoard`, `idChecklists`, `idLabels`, `idList`, `idMembers`, `idMembersVoted`, `idShort`, `labels`, `manualCoverAttachment`, `name`, `pos`, `shortLink`, `shortUrl`, `subscribed`, `url`"
                },
                {
                  "key": "cards_limit",
                  "value": "{{cards_limit}}",
                  "disabled": true,
                  "description": "The maximum number of cards to return. Maximum: 1000"
                },
                {
                  "key": "cards_page",
                  "value": "{{cards_page}}",
                  "disabled": true,
                  "description": "The page of results for cards. Maximum: 100"
                },
                {
                  "key": "card_board",
                  "value": "{{card_board}}",
                  "disabled": true,
                  "description": "Whether to include the parent board with card results"
                },
                {
                  "key": "card_list",
                  "value": "{{card_list}}",
                  "disabled": true,
                  "description": "Whether to include the parent list with card results"
                },
                {
                  "key": "card_members",
                  "value": "{{card_members}}",
                  "disabled": true,
                  "description": "Whether to include member objects with card results"
                },
                {
                  "key": "card_stickers",
                  "value": "{{card_stickers}}",
                  "disabled": true,
                  "description": "Whether to include sticker objects with card results"
                },
                {
                  "key": "card_attachments",
                  "value": "{{card_attachments}}",
                  "disabled": true,
                  "description": "Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments."
                },
                {
                  "key": "organization_fields",
                  "value": "{{organization_fields}}",
                  "disabled": true,
                  "description": "all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website"
                },
                {
                  "key": "organizations_limit",
                  "value": "{{organizations_limit}}",
                  "disabled": true,
                  "description": "The maximum number of Workspaces to return. Maximum 1000"
                },
                {
                  "key": "member_fields",
                  "value": "{{member_fields}}",
                  "disabled": true,
                  "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username"
                },
                {
                  "key": "members_limit",
                  "value": "{{members_limit}}",
                  "disabled": true,
                  "description": "The maximum number of members to return. Maximum 1000"
                },
                {
                  "key": "partial",
                  "value": "{{partial}}",
                  "disabled": true,
                  "description": "By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled \"My Development Status Report\", by default you would need to search for \"Development\". If you have partial enabled, you will be able to search for \"dev\" but not \"velopment\"."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Find what you're looking for in Trello",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Search for Members",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}search/members/",
              "query": [
                {
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": false,
                  "description": "Search query 1 to 16384 characters long"
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "The maximum number of results to return. Maximum of 20."
                },
                {
                  "key": "idBoard",
                  "value": "{{idBoard}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "idOrganization",
                  "value": "{{idOrganization}}",
                  "disabled": true,
                  "description": ""
                },
                {
                  "key": "onlyOrgMembers",
                  "value": "{{onlyOrgMembers}}",
                  "disabled": true,
                  "description": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Search for Trello members.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tokens",
      "item": [
        {
          "name": "Get a Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`"
                },
                {
                  "key": "webhooks",
                  "value": "{{webhooks}}",
                  "disabled": true,
                  "description": "Determines whether to include webhooks."
                }
              ],
              "variable": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve information about a token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Token's Member",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/member",
              "query": [
                {
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true,
                  "description": "`all` or a comma-separated list of valid fields for [Member Object](/cloud/trello/guides/rest-api/object-definitions/)."
                }
              ],
              "variable": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve information about a token's owner by token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get Webhooks for Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/webhooks",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve all webhooks created with a Token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create Webhooks for Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/webhooks",
              "query": [
                {
                  "key": "description",
                  "value": "{{description}}",
                  "disabled": true,
                  "description": "A description to be displayed when retrieving information about the webhook."
                },
                {
                  "key": "callbackURL",
                  "value": "{{callbackURL}}",
                  "disabled": false,
                  "description": "The URL that the webhook should POST information to."
                },
                {
                  "key": "idModel",
                  "value": "{{idModel}}",
                  "disabled": false,
                  "description": "ID of the object to create a webhook on."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new webhook for a Token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Webhook belonging to a Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/webhooks/:idWebhook",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve a webhook created with a Token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Webhook created by Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/webhooks/:idWebhook",
              "query": [
                {
                  "key": "description",
                  "value": "{{description}}",
                  "disabled": true,
                  "description": "A description to be displayed when retrieving information about the webhook."
                },
                {
                  "key": "callbackURL",
                  "value": "{{callbackURL}}",
                  "disabled": true,
                  "description": "The URL that the webhook should `POST` information to."
                },
                {
                  "key": "idModel",
                  "value": "{{idModel}}",
                  "disabled": true,
                  "description": "ID of the object that the webhook is on."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [],
            "description": "Update a Webhook created by Token",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Webhook created by Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/webhooks/:idWebhook",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a webhook created with given token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Token",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tokens/:token/",
              "query": [],
              "variable": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "description": "",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a token.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Create a Webhook",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}webhooks/",
              "query": [
                {
                  "key": "description",
                  "value": "{{description}}",
                  "disabled": true,
                  "description": "A string with a length from `0` to `16384`."
                },
                {
                  "key": "callbackURL",
                  "value": "{{callbackURL}}",
                  "disabled": false,
                  "description": "A valid URL that is reachable with a `HEAD` and `POST` request."
                },
                {
                  "key": "idModel",
                  "value": "{{idModel}}",
                  "disabled": false,
                  "description": "ID of the model to be monitored"
                },
                {
                  "key": "active",
                  "value": "{{active}}",
                  "disabled": true,
                  "description": "Determines whether the webhook is active and sending `POST` requests."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Create a new webhook.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a Webhook",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}webhooks/:id",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Get a webhook by ID. You must use the token query parameter and pass in the token the webhook was created under, or else you will encounter a 'webhook does not belong to token' error.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update a Webhook",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}webhooks/:id",
              "query": [
                {
                  "key": "description",
                  "value": "{{description}}",
                  "disabled": true,
                  "description": "A string with a length from `0` to `16384`."
                },
                {
                  "key": "callbackURL",
                  "value": "{{callbackURL}}",
                  "disabled": true,
                  "description": "A valid URL that is reachable with a `HEAD` and `POST` request."
                },
                {
                  "key": "idModel",
                  "value": "{{idModel}}",
                  "disabled": true,
                  "description": "ID of the model to be monitored"
                },
                {
                  "key": "active",
                  "value": "{{active}}",
                  "disabled": true,
                  "description": "Determines whether the webhook is active and sending `POST` requests."
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a webhook by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete a Webhook",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}webhooks/:id",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a webhook by ID.",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get a field on a Webhook",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}webhooks/:id/:field",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the webhook.",
                  "disabled": false
                },
                {
                  "key": "field",
                  "value": "{{field}}",
                  "description": "Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [],
            "description": "Get a field on a Webhook",
            "auth": {
              "type": "bearer",
              "bearer": {
                "key": "token",
                "type": "string"
              }
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "protocol",
      "name": "Protocol",
      "description": "The HTTP Protocol that should be used for this REST API.",
      "type": "string",
      "value": "https"
    },
    {
      "key": "host",
      "name": "Host",
      "description": "The HTTP host that should be used for this REST API.",
      "type": "string",
      "value": "api.trello.com"
    },
    {
      "key": "basePath",
      "name": "Base Path",
      "description": "The path, after the host, of the base of the REST API.",
      "type": "string",
      "value": "1/"
    }
  ]
}